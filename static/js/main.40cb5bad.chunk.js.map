{"version":3,"sources":["components/NewsCard/style.js","components/NewsCard/NewsCard.js","components/NewsCards/style.js","components/NewsCards/NewsCards.js","style.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","media","height","border","fullHeightCard","card","display","flexDirection","justifyContent","borderBottom","activeCard","grid","details","margin","title","padding","cardActions","NewsCard","articles","description","publishedAt","source","url","urlToImage","i","classes","useStyles","Card","className","CardActionArea","href","target","CardMedia","image","Typography","variant","color","component","Date","toDateString","name","gutterBottom","CardContent","CardActions","Button","size","alignItems","width","borderRadius","infoCard","textAlign","container","fontSize","infoCards","text","info","NewsCards","length","Grow","in","Grid","spacing","map","item","xs","sm","md","lg","style","backgroundColor","split","theme","footer","position","left","bottom","breakpoints","down","link","textDecoration","marginLeft","marginBottom","infoContainer","logoContainer","alanLogo","App","useState","newsArticles","setNewsArticles","useEffect","alanBtn","key","onCommand","command","number","parsedNumber","wordsToNumbers","fuzzy","article","playText","window","open","src","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40cb5bad.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n    media: {\r\n        height: 250,\r\n    },\r\n    border: {\r\n        border: 'solid',\r\n    },\r\n    fullHeightCard: {\r\n        height: '100%',\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderBottom: '10px solid white',\r\n    },\r\n    activeCard: {\r\n        borderBottom: '10px solid #22289a',\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px',\r\n    },\r\n    title: {\r\n        padding: '0 16px',\r\n    },\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n});\r\n","import React from 'react'\r\nimport { Card, CardActions, CardActionArea, CardContent, CardMedia, Button, Typography } from '@material-ui/core'\r\nimport useStyles from \"./style.js\";\r\nconst NewsCard = ({ articles: { description, publishedAt, source, title, url, urlToImage }, i }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardActionArea href={url} target=\"_blank\">\r\n                <CardMedia className={classes.media} image={urlToImage || \"https://www.pexels.com/photo/news-inscription-on-neon-signboard-hanging-on-street-1577882/\"} />\r\n                <div className={classes.details}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{(new Date(publishedAt)).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{source.name}</Typography>\r\n\r\n                </div>\r\n                <Typography className={classes.title} variant=\"h5\" gutterBottom>{title}</Typography>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{description}</Typography>\r\n                </CardContent>\r\n\r\n            </CardActionArea>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\">Learn More</Button>\r\n                <Typography variant=\"h5\" color=\"textSecondary\" >{i + 1}</Typography>\r\n\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewsCard\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '70vh',\r\n        padding: '10%',\r\n        borderRadius: 10,\r\n        color: 'white',\r\n\r\n    },\r\n    infoCard: {\r\n        display: 'flex', flexDirection: 'column', textAlign: 'center',\r\n    },\r\n    container: {\r\n        padding: '0 5%', width: '100%', margin: 0, fontSize: 10\r\n\r\n    }\r\n});\r\n","import React from 'react';\r\nimport NewsCard from '../NewsCard/NewsCard';\r\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./style.js\";\r\n\r\nconst infoCards = [\r\n    { color: '#e63946', title: 'Latest News', text: 'Give me the latest news' },\r\n    { color: '#3a86ff', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\r\n    { color: '#355070', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\r\n    { color: '#03045e', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\r\n];\r\n\r\nconst NewsCards = ({ articles }) => {\r\n    const classes = useStyles();\r\n\r\n    if (!articles.length) {\r\n        return (\r\n            <Grow in>\r\n                <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                    {infoCards.map((infoCard) => (\r\n                        <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\r\n                            <div className={classes.card} style={{ backgroundColor: infoCard.color }}>\r\n                                <Typography variant=\"h5\" component=\"h5\">{infoCard.title}</Typography>\r\n                                {infoCard.info ? <Typography variant=\"h6\" component=\"h6\"><strong>{infoCard.title.split(' ')[2]}</strong>: <br />{infoCard.info}</Typography> : null}\r\n                                <Typography variant=\"h6\" component=\"h6\">Try saying: <br /> <i>{infoCard.text}</i></Typography>\r\n                            </div>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grow>\r\n        );\r\n    }\r\n    return (\r\n        <Grow in>\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n\r\n                {articles.map((articles, i) => {\r\n                    return (\r\n                        <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: 'flex' }}>\r\n                            <NewsCard articles={articles} i={i} />\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default NewsCards\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    footer: {\r\n        textAlign: 'center',\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: 0,\r\n        color: 'black',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '120px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'rgba(21, 101, 192)',\r\n    },\r\n    image: {\r\n        marginLeft: 20,\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50%',\r\n        padding: '3%',\r\n        borderRadius: 10,\r\n        color: 'white',\r\n        backgroundColor: 'rgba(21, 101, 192)',\r\n        margin: '0 12px',\r\n        textAlign: 'center',\r\n        height: '25vmin',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column-reverse',\r\n            textAlign: 'center',\r\n            width: '100%',\r\n            height: 'initial',\r\n            '&:nth-of-type(1)': {\r\n                marginBottom: '12px',\r\n            },\r\n        },\r\n    },\r\n    infoContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    logoContainer: {\r\n        padding: '0 5%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column-reverse',\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n    alanLogo: {\r\n        height: '27vmin',\r\n        borderRadius: '15%',\r\n        padding: '0 5%',\r\n        margin: '3% 0',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '35vmin',\r\n        },\r\n    },\r\n}));","import React, { useState, useEffect } from 'react';\nimport alanBtn from '@alan-ai/alan-sdk-web';\nimport NewsCards from \"./components/NewsCards/NewsCards\"\nimport useStyles from \"./style.js\";\nimport { Typography } from '@material-ui/core';\nimport wordsToNumbers from 'words-to-numbers';\n\n\nconst alanKey = \"e4792b4fab06722f83e104b4a680c3f52e956eca572e1d8b807a3e2338fdd0dc/stage\";\nfunction App() {\n  const classes = useStyles()\n  const [newsArticles, setNewsArticles] = useState([])\n  useEffect(() => {\n    alanBtn({\n      key: alanKey,\n      onCommand: ({ command, articles, number }) => {\n        if (command === \"newHeadLines\") {\n          setNewsArticles(articles)\n        }\n        else if (command === 'open') {\n          const parsedNumber = number.length > 2 ? wordsToNumbers((number), { fuzzy: true }) : number;\n          const article = articles[parsedNumber - 1];\n\n          if (parsedNumber > 20) {\n            alanBtn().playText('Please try that again...');\n          } else if (article) {\n            window.open(article.url, '_blank');\n            alanBtn().playText('Opening...');\n          }\n\n        }\n      }\n    })\n  }, [])\n  return (\n    <div className=\"App\">\n      <div className={classes.logoContainer}>\n        {newsArticles.length ? (\n          <div className={classes.infoContainer}>\n            <div className={classes.card}><Typography variant=\"h5\" component=\"h2\">Try saying: <br /><br />Open article number [4]</Typography></div>\n            <div className={classes.card}><Typography variant=\"h5\" component=\"h2\">Try saying: <br /><br />Go back</Typography></div>\n          </div>\n        ) : null}\n        <img src=\"https://alan.app/voice/images/previews/preview.jpg\" className={classes.alanLogo} alt=\"logo\" />\n      </div>\n      <NewsCards articles={newsArticles} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}